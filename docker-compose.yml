version: "3.8"

services:

  postgres:
    image: 'postgres:11'
    volumes:
      - './postgres/scripts:/app/scripts'
      - 'app-postgres:/var/lib/postgresql/data'
    ports:
      - "5432:5432"
    env_file:
      - './postgres/.env'
    restart: 'unless-stopped'

  zookeeper:
    image: 'bitnami/zookeeper:3.6.2'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  
  kafka:
    image: 'bitnami/kafka:2.7.0'
    container_name: kakfa
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.9.3
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      cluster.name: docker-es-cluster
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: "curl -f http://localhost:9200 || exit 1"
      start_period: 30s

  logstash:
    image: docker.elastic.co/logstash/logstash:7.9.3
    container_name: logstash
    restart: unless-stopped
    ports:
      - "5044:5044"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline/
      - ./logstash/drivers:/usr/share/logstash/drivers/
    depends_on:
      - elasticsearch
    healthcheck:
      test: "curl -f http://localhost:9600 || exit 1"
      start_period: 30s

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.9.3
    container_name: kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    healthcheck:
      test: "curl -f http://localhost:5601 || exit 1"
      start_period: 30s

  filebeat:
    build: filebeat
    container_name: filebeat
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/usr/share/dockerlogs/data:ro
    depends_on:
      - elasticsearch
      - logstash

  prometheus:
    image: prom/prometheus:v2.23.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9090" ]
      start_period: 30s

  grafana:
    image: grafana/grafana:7.3.5
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "3000" ]
      start_period: 30s

volumes:
  app-postgres: